package cn.edu.fudan.se.cochange_analysis.git.bean;

import java.io.Serializable;

public class CommitParent extends CommitParentKey implements Serializable {
    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column commit_parent.parent_commit_id
     *
     * @mbg.generated
     */
    private String parentCommitId;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table commit_parent
     *
     * @mbg.generated
     */
    private static final long serialVersionUID = 1L;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commit_parent
     *
     * @mbg.generated
     */
    public CommitParent(Integer repositoryId, String commitId, String parentCommitId) {
        super(repositoryId, commitId);
        this.parentCommitId = parentCommitId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commit_parent
     *
     * @mbg.generated
     */
    public CommitParent() {
        super();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column commit_parent.parent_commit_id
     *
     * @return the value of commit_parent.parent_commit_id
     *
     * @mbg.generated
     */
    public String getParentCommitId() {
        return parentCommitId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column commit_parent.parent_commit_id
     *
     * @param parentCommitId the value for commit_parent.parent_commit_id
     *
     * @mbg.generated
     */
    public void setParentCommitId(String parentCommitId) {
        this.parentCommitId = parentCommitId == null ? null : parentCommitId.trim();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commit_parent
     *
     * @mbg.generated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        CommitParent other = (CommitParent) that;
        return (this.getRepositoryId() == null ? other.getRepositoryId() == null : this.getRepositoryId().equals(other.getRepositoryId()))
            && (this.getCommitId() == null ? other.getCommitId() == null : this.getCommitId().equals(other.getCommitId()))
            && (this.getParentCommitId() == null ? other.getParentCommitId() == null : this.getParentCommitId().equals(other.getParentCommitId()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commit_parent
     *
     * @mbg.generated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getRepositoryId() == null) ? 0 : getRepositoryId().hashCode());
        result = prime * result + ((getCommitId() == null) ? 0 : getCommitId().hashCode());
        result = prime * result + ((getParentCommitId() == null) ? 0 : getParentCommitId().hashCode());
        return result;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table commit_parent
     *
     * @mbg.generated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", parentCommitId=").append(parentCommitId);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }
}