<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="cn.edu.fudan.se.cochange_analysis.git.dao.ParallelChangeRelationCommitMapper">
	<resultMap id="BaseResultMap"
		type="cn.edu.fudan.se.cochange_analysis.git.bean.ParallelChangeRelationCommit">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<constructor>
			<arg column="repository_id" javaType="java.lang.Integer"
				jdbcType="INTEGER" />
			<arg column="commit_id" javaType="java.lang.String" jdbcType="VARCHAR" />
			<arg column="file_pair" javaType="java.lang.String" jdbcType="VARCHAR" />
			<arg column="change_type1" javaType="java.lang.String" jdbcType="VARCHAR" />
			<arg column="change_type2" javaType="java.lang.String" jdbcType="VARCHAR" />
			<arg column="change_operation_id1" javaType="java.lang.Integer"
				jdbcType="INTEGER" />
			<arg column="change_operation_id2" javaType="java.lang.Integer"
				jdbcType="INTEGER" />
		</constructor>
	</resultMap>
	<insert id="insert"
		parameterType="cn.edu.fudan.se.cochange_analysis.git.bean.ParallelChangeRelationCommit">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into parallel_change_relation_commit (repository_id, commit_id,
		file_pair,
		change_type1, change_type2, change_operation_id1,
		change_operation_id2)
		values (#{repositoryId,jdbcType=INTEGER},
		#{commitId,jdbcType=VARCHAR},
		#{filePair,jdbcType=VARCHAR},
		#{changeType1,jdbcType=VARCHAR}, #{changeType2,jdbcType=VARCHAR},
		#{changeOperationId1,jdbcType=INTEGER},
		#{changeOperationId2,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="cn.edu.fudan.se.cochange_analysis.git.bean.ParallelChangeRelationCommit">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into parallel_change_relation_commit
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="repositoryId != null">
				repository_id,
			</if>
			<if test="commitId != null">
				commit_id,
			</if>
			<if test="filePair != null">
				file_pair,
			</if>
			<if test="changeType1 != null">
				change_type1,
			</if>
			<if test="changeType2 != null">
				change_type2,
			</if>
			<if test="changeOperationId1 != null">
				change_operation_id1,
			</if>
			<if test="changeOperationId2 != null">
				change_operation_id2,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="repositoryId != null">
				#{repositoryId,jdbcType=INTEGER},
			</if>
			<if test="commitId != null">
				#{commitId,jdbcType=VARCHAR},
			</if>
			<if test="filePair != null">
				#{filePair,jdbcType=VARCHAR},
			</if>
			<if test="changeType1 != null">
				#{changeType1,jdbcType=VARCHAR},
			</if>
			<if test="changeType2 != null">
				#{changeType2,jdbcType=VARCHAR},
			</if>
			<if test="changeOperationId1 != null">
				#{changeOperationId1,jdbcType=INTEGER},
			</if>
			<if test="changeOperationId2 != null">
				#{changeOperationId2,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<insert id="insertBatch" parameterType="java.util.List">
		insert into parallel_change_relation_commit (repository_id, commit_id,
		file_pair,
		change_type1, change_type2, change_operation_id1,
		change_operation_id2)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.repositoryId,jdbcType=INTEGER},
			#{item.commitId,jdbcType=VARCHAR}, #{item.filePair,jdbcType=VARCHAR},
			#{item.changeType1,jdbcType=VARCHAR},
			#{item.changeType2,jdbcType=VARCHAR},
			#{item.changeOperationId1,jdbcType=INTEGER},
			#{item.changeOperationId2,jdbcType=INTEGER})
		</foreach>
	</insert>

	<select id="selectDistinctByRepositoryId" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		repository_id, commit_id,
		file_pair,
		change_type1,
		change_type2, change_operation_id1,
		change_operation_id2
		from
		parallel_change_relation_commit
		where repository_id =
		#{repositoryId,jdbcType=INTEGER}
		group by file_pair
	</select>

	<select id="selectByRepositoryId" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		repository_id, commit_id,
		file_pair,
		change_type1,
		change_type2, change_operation_id1,
		change_operation_id2
		from
		parallel_change_relation_commit
		where repository_id =
		#{repositoryId,jdbcType=INTEGER}
	</select>
</mapper>