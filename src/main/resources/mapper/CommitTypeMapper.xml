<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.fudan.se.cochange_analysis.git.dao.CommitTypeMapper">
  <resultMap id="BaseResultMap" type="cn.edu.fudan.se.cochange_analysis.git.bean.CommitType">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="repository_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="commit_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="commit_type" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    repository_id, commit_id, commit_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="cn.edu.fudan.se.cochange_analysis.git.bean.CommitTypeKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from commit_type
    where repository_id = #{repositoryId,jdbcType=INTEGER}
      and commit_id = #{commitId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.edu.fudan.se.cochange_analysis.git.bean.CommitTypeKey">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from commit_type
    where repository_id = #{repositoryId,jdbcType=INTEGER}
      and commit_id = #{commitId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.edu.fudan.se.cochange_analysis.git.bean.CommitType">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into commit_type (repository_id, commit_id, commit_type
      )
    values (#{repositoryId,jdbcType=INTEGER}, #{commitId,jdbcType=VARCHAR}, #{commitType,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.fudan.se.cochange_analysis.git.bean.CommitType">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into commit_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="repositoryId != null">
        repository_id,
      </if>
      <if test="commitId != null">
        commit_id,
      </if>
      <if test="commitType != null">
        commit_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="repositoryId != null">
        #{repositoryId,jdbcType=INTEGER},
      </if>
      <if test="commitId != null">
        #{commitId,jdbcType=VARCHAR},
      </if>
      <if test="commitType != null">
        #{commitType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.fudan.se.cochange_analysis.git.bean.CommitType">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update commit_type
    <set>
      <if test="commitType != null">
        commit_type = #{commitType,jdbcType=VARCHAR},
      </if>
    </set>
    where repository_id = #{repositoryId,jdbcType=INTEGER}
      and commit_id = #{commitId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.fudan.se.cochange_analysis.git.bean.CommitType">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update commit_type
    set commit_type = #{commitType,jdbcType=VARCHAR}
    where repository_id = #{repositoryId,jdbcType=INTEGER}
      and commit_id = #{commitId,jdbcType=VARCHAR}
  </update>
</mapper>